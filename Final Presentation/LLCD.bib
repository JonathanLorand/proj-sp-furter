@article{Martin2007,
abstract = {This paper presents an introduction to a calculus of binary multirelations, which can model both angelic and demonic kinds of non-determinism. The isomorphism between up-closed multirelations and monotonic predicate transformers allows a different view of program transformation, and program transformation calculations using multirelations are easier to perform in some circumstances. Multirelations are illustrated by modelling both kinds of nondeterministic behaviour in games and resource-sharing protocols. {\textcopyright} 2006 Elsevier B.V. All rights reserved.},
author = {Martin, C. E. and Curtis, S. A. and Rewitzky, I.},
doi = {10.1016/j.scico.2006.01.007},
file = {:C\:/Users/mariu/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Martin, Curtis, Rewitzky - 2007 - Modelling angelic and demonic nondeterminism with multirelations.pdf:pdf},
issn = {01676423},
journal = {Science of Computer Programming},
keywords = {Agent,Angelic nondeterminism,Demonic nondeterminism,Multirelation,Predicate transformer,Resource sharing,Strongest postcondition},
month = {mar},
number = {2},
pages = {140--158},
publisher = {Elsevier},
title = {{Modelling angelic and demonic nondeterminism with multirelations}},
volume = {65},
year = {2007}
}
@article{Rewitzky2004,
abstract = {Relational models for imperative programming languages provide a representation of commands in terms of binary input-output relations over states. Various relational models have arisen from modelling decisions on the distinction between angelic- and demonic non-determinism, and have been shown to be isomorphic to disjunctive- or conjunctive predicate transformer semantics. For commands with both angelic- and demonic nondeterminism it is known that monotone unary operators provide a predicate transformer semantics but there is no conventional relational model. In this paper we propose a novel relational representation, in terms of binary multirelations, for such commands. Then we show that binary multirelations and monotone unary operators are intertranslatable. {\textcopyright} Springer-Verlag Berlin Heidelberg 2003.},
author = {Rewitzky, Ingrid},
doi = {10.1007/978-3-540-24615-2_12},
file = {:C\:/Users/mariu/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Rewitzky - 2004 - Binary multirelations.pdf:pdf},
issn = {03029743},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
pages = {256--271},
publisher = {Springer, Berlin, Heidelberg},
title = {{Binary multirelations}},
url = {https://link.springer.com/chapter/10.1007/978-3-540-24615-2_12},
volume = {2929},
year = {2004}
}
@article{Morris2004,
abstract = {We show how to introduce demonic and angelic nondeterminacy into the term language of each type in typical programming or specification language. For each type we introduce (binary infix) operators ∏ and ∐ on terms of the type, corresponding to demonic and angelic nondeterminacy, respectively. We generalise these operators to accommodate unbounded nondeterminacy. We axiomatise the operators and derive their important properties. We show that a suitable model for nondeterminacy is the free completely distributive complete lattice over a poset, and we use this to show that our axiomatisation is sound. In the process, we exhibit a strong relationship between nondeterminacy and free lattices that has not hitherto been evident. Although nondeterminacy arises naturally in specification and programming languages, we speculate that it combines fruitfully with function theory to the extent that it can play an important role in facilitating proofs of programs that have no apparent connection with nondeterminacy. {\textcopyright} Springer-Verlag 2004.},
author = {Morris, Joseph M.},
doi = {10.1007/978-3-540-27764-4_15},
file = {:C\:/Users/mariu/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Morris - 2004 - Augmenting types with unbounded demonic and angelic nondeterminacy.pdf:pdf},
isbn = {3540223800},
issn = {16113349},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
keywords = {Angelic nondeterminacy,Demonic nondeterminacy,Free completely distributive lattice},
pages = {274--288},
publisher = {Springer Verlag},
title = {{Augmenting types with unbounded demonic and angelic nondeterminacy}},
url = {https://link.springer.com/chapter/10.1007/978-3-540-27764-4_15},
volume = {3125},
year = {2004}
}
@article{Houston2006,
abstract = {If a compact closed category has finite products or finite coproducts then it in fact has finite biproducts, and so is semi-additive.},
archivePrefix = {arXiv},
arxivId = {math/0604542},
author = {Houston, Robin},
doi = {10.1016/j.jpaa.2007.05.021},
eprint = {0604542},
file = {:C\:/Users/mariu/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Houston - 2006 - Finite Products are Biproducts in a Compact Closed Category.pdf:pdf},
journal = {Journal of Pure and Applied Algebra},
month = {apr},
number = {2},
pages = {394--400},
primaryClass = {math},
title = {{Finite Products are Biproducts in a Compact Closed Category}},
url = {http://arxiv.org/abs/math/0604542 http://dx.doi.org/10.1016/j.jpaa.2007.05.021},
volume = {212},
year = {2006}
}
@article{Yetter1990,
abstract = {It is the purpose of this paper to make explicit the connection between J.-Y. Girard's “linear logic” [4], and certain models for the logic of quantum mechanics, namely Mulvey's “quantales” [9]. This will be done not only in the case of commutative linear logic, but also in the case of a version of noncommutative linear logic suggested, but not fully formalized, by Girard in lectures given at McGill University in the fall of 1987 [5], and which for reasons which will become clear later we call “cyclic linear logic”.For many of our results on quantales, we rely on the work of Niefield and Rosenthal [10]. The reader should note that by “the logic of quantum mechanics” we do not mean the lattice theoretic “quantum logics” of Birkhoff and von Neumann [1], but rather a logic involving an associative (in general noncommutative) operation “and then”. Logical validity is intended to embody empirical verification (whether a physical experiment, or running a program), and the validity of A & B (in Mulvey's notation) is to be regarded as “we have verified A , and then we have verified B ”. (See M. D. Srinivas [11] for another exposition of this idea.) This of course is precisely the view of the “multiplicative conjunction”, ⊗, in the phase semantics for Girard's linear logic [4], [5]. Indeed the quantale semantics for linear logic may be regarded as an element-free version of the phase semantics.},
author = {Yetter, David N.},
doi = {10.2307/2274953},
file = {:C\:/Users/mariu/OneDrive/Documents/FS21/ACT Project/Essential Reading/yetter - quantales-and-noncommutative-linear-logic.pdf:pdf},
issn = {0022-4812},
journal = {Journal of Symbolic Logic},
number = {1},
pages = {41--64},
title = {{Quantales and (noncommutative) linear logic}},
volume = {55},
year = {1990}
}
@article{Marsden2018,
abstract = {Considering resource usage is a powerful insight in the analysis of many phenomena in the sciences. Much of the current research on these resource theories focuses on the analysis of specific resources such quantum entanglement, purity, randomness or asymmetry. However, the mathematical foundations of resource theories are at a much earlier stage, and there has been no satisfactory account of quantitative aspects such as costs, rates or probabilities. We present a categorical foundation for quantitative resource theories, derived from enriched category theory. Our approach is compositional, with rich algebraic structure facilitating calculations. The resulting theory is parameterized, both in the quantities under consideration, for example costs or probabilities, and in the structural features of the resources such as whether they can be freely copied or deleted. We also achieve a clear separation of concerns between the resource conversions that are freely available, and the costly resources that are typically the object of study. By using an abstract categorical approach, our framework is naturally open to extension. We provide many examples throughout, emphasising the resource theoretic intuitions for each of the mathematical objects under consideration.},
author = {Marsden, Dan and Zwart, Maaike},
doi = {10.4230/LIPIcs.CSL.2018.32},
file = {:C\:/Users/mariu/OneDrive/Documents/FS21/ACT Project/Essential Reading/Marsden - Quantitative Foundations for Resource Theories.pdf:pdf},
isbn = {9783959770880},
issn = {18688969},
journal = {Leibniz International Proceedings in Informatics, LIPIcs},
keywords = {Bimodule,Combinatorial species,Enriched category,Monad,Multicategory,Operad,Profunctor,Resource theory},
number = {32},
pages = {1--17},
title = {{Quantitative foundations for resource theories}},
volume = {119},
year = {2018}
}
@article{Schalk2004,
abstract = {We describe a method for constructing models of linear logic based on the category of sets and relations. The resulting categories are non-degenerate in general; in particular they are not compact closed nor do they have biproducts. The construction is simple, lifting the structure of a poset to the new category. The underlying poset thus controls the structure of this category, and different posets give rise to differently-flavoured models. As a result, this technique allows the construction of models for both, intuitionistic or classical linear logic as desired. A number of well-known models, for example coherence spaces and hypercoherences, are instances of this method. {\textcopyright} 2003 Elsevier B.V. All rights reserved.},
author = {Schalk, Andrea and {De Paiva}, Valeria},
doi = {10.1016/j.tcs.2003.11.014},
file = {:C\:/Users/mariu/OneDrive/Documents/FS21/ACT Project/Essential Reading/Schalk de Paiva  - Poset-valued sets or how to build models for linear logic.pdf:pdf},
issn = {03043975},
journal = {Theoretical Computer Science},
keywords = {Categorical models,Linear logic},
number = {1},
pages = {83--107},
title = {{Poset-valued sets or how to build models for linear logics}},
volume = {315},
year = {2004}
}
